plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.60"
    id "org.jetbrains.kotlin.kapt" version "1.3.60"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.60"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
}



version "0.1"
group "user.list"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut.configuration:micronaut-jdbc-hikari"
    implementation "io.micronaut.configuration:micronaut-flyway"
    implementation ("org.flywaydb:flyway-core:6.0.6") {
        force = true
    }
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    implementation "javax.annotation:javax.annotation-api"
    kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    runtimeOnly "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    runtimeOnly "org.postgresql:postgresql:42.2.8"
    kapt "io.micronaut.data:micronaut-data-processor:$micronautDataVersion"
    compile "io.micronaut.data:micronaut-data-jdbc:$micronautDataVersion"
    compileOnly 'jakarta.persistence:jakarta.persistence-api:2.2.2'

    kaptTest platform("io.micronaut:micronaut-bom:$micronautVersion")
    kaptTest "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testCompile "io.micronaut.test:micronaut-test-junit5:1.1.2"
    testCompile "org.mockito:mockito-junit-jupiter:2.22.0"
    testCompile('org.junit.jupiter:junit-jupiter-params:5.1.0')
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.1.0"}

test.classpath += configurations.developmentOnly

mainClassName = "user.list.Application"

test {
    useJUnitPlatform()
}

allOpen {
	annotation("io.micronaut.aop.Around")
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = '11'
	    //Will retain parameter names for Java reflection
	    javaParameters = true 
	}
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = '11'
	    javaParameters = true 
	}
}

shadowJar {
    mergeServiceFiles()
}

clean {
    delete 'out'
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
